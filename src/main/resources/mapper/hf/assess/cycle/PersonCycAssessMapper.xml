<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paladin.hf.mapper.assess.cycle.PersonCycAssessMapper">
    <select id="findPersonal" parameterType="com.paladin.hf.service.assess.cycle.dto.PersonalQueryDTO" resultType="com.paladin.hf.service.assess.cycle.vo.CycleAssessSimpleVO">
        SELECT
        pca.id AS id,
        pca.org_user_id AS userId,
        pca.assess_cycle_id AS assessCycleId,
        pca.self_ass_grade AS selfAssGrade,
        pca.depart_grade AS departGrade,
        pca.unit_ass_grade AS unitAssGrade,
        pca.confirmed_result AS confirmedResult,
        pca.operate_state AS operateState,
        pca.unit_id AS unitId,
        pca.agency_id AS agencyId,
        ac.cycle_name AS assessCycleName,
        our.`name` AS userName
        FROM person_cyc_assess pca
        INNER JOIN assess_cycle ac ON ac.id = pca.assess_cycle_id
        INNER JOIN org_user our ON our.id = pca.org_user_id
        WHERE pca.org_user_id=#{userId}
         AND pca.operate_state NOT IN (2,4)
        <if test="assessCycleId!=null and assessCycleId!=''">
            and pca.assess_cycle_id=#{assessCycleId}
        </if>
        ORDER BY ac.cycle_start_time DESC
    </select>
    
    <select id="findDepartment" resultType="com.paladin.hf.service.assess.cycle.vo.CycleAssessSimpleVO">
        SELECT
        pca.id AS id,
        pca.org_user_id AS userId,
        pca.assess_cycle_id AS assessCycleId,
        pca.self_ass_grade AS selfAssGrade,
        pca.depart_grade AS departGrade,
        pca.unit_ass_grade AS unitAssGrade,
        pca.confirmed_result AS confirmedResult,
        pca.operate_state AS operateState,
        pca.unit_id AS unitId,
        pca.agency_id AS agencyId,
        ac.cycle_name AS assessCycleName,
        our.`name` AS userName
        FROM person_cyc_assess pca
        INNER JOIN assess_cycle ac ON ac.id = pca.assess_cycle_id
        INNER JOIN org_user our ON our.id = pca.org_user_id
        WHERE our.is_delete = 0 
        	AND pca.assess_cycle_id = #{query.cycleId}
        	AND pca.operate_state > 0
        <if test="unitParam.unitId!=null">
            AND pca.unit_id=#{unitParam.unitId}
        </if>
        <if test="unitParam.assessTeamId!=null">
            AND pca.assess_team_id=#{unitParam.assessTeamId}
        </if>
        <if test="unitParam.unitIds!=null">
            AND pca.unit_id in
            <foreach collection="unitParam.unitIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="unitParam.agencyId!=null">
            AND pca.agency_id=#{unitParam.agencyId}
        </if>
        <if test="unitParam.agencyIds!=null">
            AND pca.agency_id in
            <foreach collection="unitParam.agencyIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="query.name!=null and query.name!=''">
            AND our.name like CONCAT('%',#{query.name},'%')
        </if>
        <if test="query.status!=null and query.status==1">
            AND pca.operate_state = 1
        </if>
        <if test="query.status!=null and query.status==2">
            AND pca.operate_state = 2
        </if>
        <if test="query.status!=null and query.status== 3">
            AND pca.operate_state >= 3
        </if>
    </select>

    <select id="findAgency" resultType="com.paladin.hf.service.assess.cycle.vo.CycleAssessSimpleVO">
        SELECT
        pca.id AS id,
        pca.org_user_id AS userId,
        pca.assess_cycle_id AS assessCycleId,
        pca.self_ass_grade AS selfAssGrade,
        pca.depart_grade AS departGrade,
        pca.unit_ass_grade AS unitAssGrade,
        pca.confirmed_result AS confirmedResult,
        pca.operate_state AS operateState,
        pca.unit_id AS unitId,
        pca.agency_id AS agencyId,
        ac.cycle_name AS assessCycleName,
        our.`name` AS userName
        FROM person_cyc_assess pca
        INNER JOIN assess_cycle ac ON ac.id = pca.assess_cycle_id
        INNER JOIN org_user our ON our.id = pca.org_user_id
        WHERE our.is_delete = 0 
        	AND pca.assess_cycle_id = #{query.cycleId}
        	AND pca.operate_state > 2
        <if test="unitParam.unitId!=null">
            AND pca.unit_id=#{unitParam.unitId}
        </if>
        <if test="unitParam.assessTeamId!=null">
            AND pca.assess_team_id=#{unitParam.assessTeamId}
        </if>
        <if test="unitParam.unitIds!=null">
            AND pca.unit_id in
            <foreach collection="unitParam.unitIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="unitParam.agencyId!=null">
            AND pca.agency_id=#{unitParam.agencyId}
        </if>
        <if test="unitParam.agencyIds!=null">
            AND pca.agency_id in
            <foreach collection="unitParam.agencyIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="query.name!=null and query.name!=''">
            AND our.name like CONCAT('%',#{query.name},'%')
        </if>
        <if test="query.status!=null and query.status ==1">
            AND pca.operate_state = 3
        </if>
        <if test="query.status!=null and query.status ==2">
            AND pca.operate_state = 4
        </if>
        <if test="query.status!=null and query.status ==3">
            AND pca.operate_state >= 5
        </if>
    </select>

	<select id="findByUser" resultType="com.paladin.hf.service.assess.cycle.vo.CycleAssessSimpleVO">
		SELECT
		pca.id AS id,
        pca.org_user_id AS userId,
        pca.assess_cycle_id AS assessCycleId,
        pca.self_ass_grade AS selfAssGrade,
        pca.depart_grade AS departGrade,
        pca.unit_ass_grade AS unitAssGrade,
        pca.confirmed_result AS confirmedResult,
        pca.operate_state AS operateState,
        pca.unit_id AS unitId,
        pca.agency_id AS agencyId,
		ac.cycle_name AS assessCycleName,
		our.`name` AS userName
		FROM
		person_cyc_assess pca
		INNER JOIN assess_cycle ac ON ac.id = pca.assess_cycle_id
		INNER JOIN org_user our ON our.id = pca.org_user_id
		WHERE pca.org_user_id=#{userId} AND pca.operate_state != 0
	</select>

    <select id="getDetailByUserAndCycle" resultType="com.paladin.hf.service.assess.cycle.vo.CycleAssessDetailVO">
        SELECT
        pca.id AS id,
        pca.org_user_id AS userId,
        pca.assess_cycle_id AS assessCycleId,
        pca.self_ass_grade AS selfAssGrade,
        pca.self_ass_time AS selfAssTime,
        pca.depart_grade AS departGrade,
        pca.depart_ass_time AS departAssTime,
        pca.unit_ass_grade AS unitAssGrade,
        pca.unit_ass_time AS unitAssTime,
        pca.confirmed_result AS confirmedResult,
        pca.confirmed_time AS confirmedTime,
        pca.remarks AS remarks,
        pca.operate_state AS operateState,
        pca.assessed_sign AS assessedSign,
        pca.dep_assessor_sign AS depAssessorSign,
        pca.unit_assessor_sign AS unitAssessorSign,
        pca.assessed_confirm_sign AS assessedConfirmSign,
        pca.unit_id AS unitId,
        pca.agency_id AS agencyId,
        pca.assess_team_id AS assessTeamId,
        pca.work_summary AS workSummary,
        pca.self_ass_opinion AS selfAssOpinion,
        pca.depart_opinion AS departOpinion,
        pca.unit_group_opinion AS unitGroupOpinion,
        pca.reject_reason AS rejectReason,
        ac.cycle_name AS assessCycName,
        our.`name`AS userName,
        our.sex,
        our.birthday,
        our.partisan,
        our.oeducation,
        our.come_unit_time AS comeUnitTime,
        our.job_duties AS jobDuties,
        aqr.base_score AS baseScore,
        aqr.add_score AS addScore,
        aqr.reduce_score AS reduceScore,
        aqr.is_veto AS isVeto
        FROM person_cyc_assess pca
        INNER JOIN assess_cycle ac ON ac.id = pca.assess_cycle_id
        INNER JOIN org_user our ON our.id = pca.org_user_id
        LEFT JOIN assess_quantitative_result aqr ON aqr.user_id = pca.org_user_id AND aqr.cycle_id = pca.assess_cycle_id
        WHERE pca.org_user_id=#{userId} AND pca.assess_cycle_id=#{cycleId}
    </select>
    
    <select id="getDetailById" resultType="com.paladin.hf.service.assess.cycle.vo.CycleAssessDetailVO">
        SELECT
        pca.id AS id,
        pca.org_user_id AS userId,
        pca.assess_cycle_id AS assessCycleId,
        pca.self_ass_grade AS selfAssGrade,
        pca.self_ass_time AS selfAssTime,
        pca.depart_grade AS departGrade,
        pca.depart_ass_time AS departAssTime,
        pca.unit_ass_grade AS unitAssGrade,
        pca.unit_ass_time AS unitAssTime,
        pca.confirmed_result AS confirmedResult,
        pca.confirmed_time AS confirmedTime,
        pca.remarks AS remarks,
        pca.operate_state AS operateState,
        pca.assessed_sign AS assessedSign,
        pca.dep_assessor_sign AS depAssessorSign,
        pca.unit_assessor_sign AS unitAssessorSign,
        pca.assessed_confirm_sign AS assessedConfirmSign,
        pca.unit_id AS unitId,
        pca.agency_id AS agencyId,
        pca.assess_team_id AS assessTeamId,
        pca.work_summary AS workSummary,
        pca.self_ass_opinion AS selfAssOpinion,
        pca.depart_opinion AS departOpinion,
        pca.unit_group_opinion AS unitGroupOpinion,
        pca.reject_reason AS rejectReason,
        ac.cycle_name AS assessCycName,
        our.`name`AS userName,
        our.sex,
        our.birthday,
        our.partisan,
        our.oeducation,
        our.come_unit_time AS comeUnitTime,
        our.job_duties AS jobDuties,
        aqr.base_score AS baseScore,
        aqr.add_score AS addScore,
        aqr.reduce_score AS reduceScore,
        aqr.is_veto AS isVeto
        FROM person_cyc_assess pca
        INNER JOIN assess_cycle ac ON ac.id = pca.assess_cycle_id
        INNER JOIN org_user our ON our.id = pca.org_user_id
        LEFT JOIN assess_quantitative_result aqr ON aqr.user_id = pca.org_user_id AND aqr.cycle_id = pca.assess_cycle_id
        WHERE pca.id=#{id}
    </select>

    
    <select id="getCountByUserAndCycle" resultType="int">
        SELECT COUNT(1) FROM person_cyc_assess pca WHERE pca.org_user_id=#{userId} AND pca.assess_cycle_id=#{cycleId}
    </select>
    
    <delete id="deletePersonalCycleAssess">
        DELETE FROM person_cyc_assess WHERE id= #{id} AND operate_state IN (0, -1)
    </delete>
    
    <update id="updateConfirmResult">
        UPDATE person_cyc_assess
        SET confirmed_result=#{confirmedResult}, confirmed_time = now(), assessed_confirm_sign = #{assessedConfirmSign}, operate_state = 6
        WHERE id = #{id} AND operate_state = 5
    </update>
    
    <update id="submitDepartment">
        UPDATE person_cyc_assess
        SET operate_state = 3, depart_ass_time = now()
        WHERE id = #{id} AND operate_state = 2
    </update>
    
    <update id="rejectDepartment">
        UPDATE person_cyc_assess
        SET operate_state = -1,reject_reason = #{rejectReason},
        depart_grade = NULL
        WHERE id = #{id} AND (operate_state = 1 OR operate_state = 2)
    </update>
    
    <update id="submitAgency">
        UPDATE person_cyc_assess
        SET operate_state = 5, unit_ass_time = now()
        WHERE id = #{id} AND operate_state = 4
    </update>
    
    <update id="rejectAgency">
        UPDATE person_cyc_assess
        SET operate_state = -1,reject_reason = #{rejectReason},
        depart_grade = NULL,
        unit_ass_grade = NULL
        WHERE id = #{id}
    </update>

    <!-- 未考评 -->
    <select id="findUnassessedForAgency"  resultType="com.paladin.hf.service.assess.cycle.vo.UnassessedUserVO">
        SELECT
        ou.org_unit_id AS unitId,
        ou.org_agency_id AS agencyId,
        ou.`name` AS userName,
        pca.operate_state AS operateState
        FROM org_user ou
        LEFT JOIN person_cyc_assess pca ON ou.id = pca.org_user_id AND pca.assess_cycle_id = #{query.assessCycleId}
        WHERE ou.is_delete = 0
        <if test="unitQuery.unitId!=null">
            AND ou.org_unit_id=#{unitQuery.unitId}
        </if>
        <if test="unitQuery.assessTeamId!=null">
            AND ou.org_assess_team_id=#{unitQuery.assessTeamId}
        </if>
        <if test="unitQuery.unitIds!=null">
            AND ou.org_unit_id in
            <foreach collection="unitQuery.unitIds" index="index" item="item"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="unitQuery.agencyId!=null">
            AND ou.org_agency_id=#{unitQuery.agencyId}
        </if>
        <if test="unitQuery.agencyIds!=null">
            AND ou.org_agency_id in
            <foreach collection="unitQuery.agencyIds" index="index" item="item"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        AND (pca.id IS NULL OR pca.operate_state <![CDATA[ <= ]]> 2)
        ORDER BY ou.org_unit_id ASC
    </select>

	<select id="findUnassessedForDepartment"  resultType="com.paladin.hf.service.assess.cycle.vo.UnassessedUserVO">
        SELECT
        ou.org_unit_id AS unitId,
        ou.org_agency_id AS agencyId,
        ou.`name` AS userName,
        pca.operate_state AS operateState
        FROM org_user ou
        LEFT JOIN person_cyc_assess pca ON ou.id = pca.org_user_id AND pca.assess_cycle_id = #{query.assessCycleId}
        WHERE ou.is_delete = 0
        <if test="unitQuery.unitId!=null">
            AND ou.org_unit_id=#{unitQuery.unitId}
        </if>
        <if test="unitQuery.assessTeamId!=null">
            AND ou.org_assess_team_id=#{unitQuery.assessTeamId}
        </if>
        <if test="unitQuery.unitIds!=null">
            AND ou.org_unit_id in
            <foreach collection="unitQuery.unitIds" index="index" item="item"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="unitQuery.agencyId!=null">
            AND ou.org_agency_id=#{unitQuery.agencyId}
        </if>
        <if test="unitQuery.agencyIds!=null">
            AND ou.org_agency_id in
            <foreach collection="unitQuery.agencyIds" index="index" item="item"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        AND (pca.id IS NULL OR pca.operate_state <![CDATA[ <= ]]> 0)
        ORDER BY ou.org_unit_id ASC
    </select>
    
    <select id="countRejectedAssessByUser" resultType="int">
    	SELECT count(1) FROM person_cyc_assess WHERE org_user_id = #{userId} AND operate_state = -1
    </select>
    
    <update id="updateAgencyOpinion" parameterType="com.paladin.hf.service.assess.cycle.dto.AgencyCycleAssessBatchDTO" >
    	UPDATE person_cyc_assess SET unit_group_opinion = #{opinion}, unit_ass_grade = #{grade}, unit_ass_time = now(), operate_state = 5
    	WHERE org_user_id = #{userId} AND assess_cycle_id = #{cycleId} AND operate_state = 3
    </update>
    
    <update id="updateDepartmentOpinion" parameterType="com.paladin.hf.service.assess.cycle.dto.DepartmentCycleAssessBatchDTO" >
    	UPDATE person_cyc_assess SET depart_opinion = #{opinion}, depart_grade = #{grade}, depart_ass_time = now(), operate_state = 3
    	WHERE org_user_id = #{userId} AND assess_cycle_id = #{cycleId} AND operate_state = 1
    </update>
    
    <select id="CycAssessStatistics" resultType="com.paladin.hf.service.assess.cycle.vo.AssessCycleStatisticsVO">
     	 SELECT
    	 SUM(p.`unit_ass_grade` = '1') AS yx,
		 SUM(p.`unit_ass_grade` = '2') AS lh,
		 SUM(p.`unit_ass_grade` = '3') AS hg,
		 SUM(p.`unit_ass_grade` = '4') AS bhg,
		 SUM(p.`unit_ass_grade` = '5') AS bddc
		 FROM `person_cyc_assess` AS p WHERE p.`org_user_id`=#{orgUserId};
    </select>
    
    <update id="updateAutoConfirm">
        UPDATE person_cyc_assess
		SET confirmed_result=1, confirmed_time = now(), assessed_confirm_sign = '自动确认', operate_state = 6
		WHERE operate_state = 5 AND unit_ass_time <![CDATA[ < ]]> #{lastTime};
    </update>

    
</mapper>